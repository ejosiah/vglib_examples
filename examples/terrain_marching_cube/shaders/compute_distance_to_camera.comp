#version 460

#include "models.glsl"

layout(local_size_x = 128) in;

void main() {
    const uint index = gl_GlobalInvocationID.x;
    if(index >= counters.blocks) return;

    const mat4 grid_to_world = camera_info.grid_to_world;
    const vec3 camera_direction = camera_info.direction;
    const vec3 camera_position = camera_info.position;

    const vec3 grid_position = block[index].aabb;
    const vec3 world_position = (camera_info.grid_to_world * vec4(grid_position, 1)).xyz;
    const float distance_to_cam =  sign(dot(camera_direction, world_position)) * distance(camera_position, world_position);

    distance_to_camera[index] = floatBitsToUint(distance_to_cam);
}