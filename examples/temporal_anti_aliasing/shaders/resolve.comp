#version 460
#extension GL_EXT_nonuniform_qualifier : enable

#include "model.glsl"

#define COLOR_BUFFER global_textures[nonuniformEXT(scene.color_buffer_index)]
#define DEPTH_BUFFER global_textures[nonuniformEXT(scene.depth_buffer_index)]
#define VELOCITY_BUFFER global_textures[nonuniformEXT(taa.velocity_texture_index)]
#define HISTORY_BUFFER global_textures[nonuniformEXT(taa.history_color_texture_index)]
#define TAA_IMAGE global_images[nonuniformEXT(taa.output_texture_index)]

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 1, binding = 10) uniform sampler2D global_textures[];
layout(set = 1, binding = 11, rg16f) uniform image2D global_images_rg16f[];
layout(set = 1, binding = 11, rgba32f) uniform image2D global_images[];

#include "resolve.glsl"

void main() {
    ivec2 iPos = ivec2(gl_GlobalInvocationID);

    if(iPos.x >= scene.resolution.x || iPos.y >= scene.resolution.y) {
        return;
    }

    vec3 color = resolve(iPos);
    imageStore(TAA_IMAGE, iPos, vec4(color, 1));

}