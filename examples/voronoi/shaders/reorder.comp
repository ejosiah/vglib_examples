#version 460

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 2) buffer Sums {
    vec4 regions[];
};

layout(set = 0, binding = 3) buffer Density {
    int counts[];
};

layout(set = 0, binding = 5) buffer Result {
    vec4 result[];
};

layout(push_constant) uniform Constants {
    int renderCentroid;
    float threshold;
    float convergenceRate;
    int screenWidth;
    int screenHeight;
    int numGenerators;
};

uvec3 gridSize = gl_NumWorkGroups * gl_WorkGroupSize;

void main() {
    uint gid = gl_GlobalInvocationID.y * gridSize.x + gl_GlobalInvocationID.x;
    vec4 region = regions[gid];
    int generatorId = int(region.z);
    int index = atomicAdd(counts[generatorId], -1) - 1;
    result[index] = region;
}